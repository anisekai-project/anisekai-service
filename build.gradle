import java.nio.charset.StandardCharsets

plugins {
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.44.0'
    id 'org.ajoberstar.reckon' version '0.16.1'
}


def generalCharset = StandardCharsets.UTF_8.name()

group = 'fr.alexpado.bots'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileJava.options.encoding = generalCharset
compileTestJava.options.encoding = generalCharset
javadoc.options.encoding = generalCharset

reckon {
    stages('dev', 'beta', 'rc', 'final')

    scopeCalc = calcScopeFromProp() | calcScopeFromCommitMessages()
    stageCalc = calcStageFromProp()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    runtimeOnly group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.3'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.12.0'
    implementation group: 'org.flywaydb', name: 'flyway-mysql', version: '9.12.0'

    implementation group: 'org.json', name: 'json', version: '20220924'
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-beta.3'

    implementation group: 'fr.alexpado', name: 'simple-http-client', version: '1.1.2-rc.1'
    implementation(group: 'fr.alexpado', name: 'jda-interactions-extension', version: '0.1.0-rc.15') {
        exclude(group: 'io.sentry')
    }

    implementation group: 'io.sentry', name: 'sentry-spring-boot-starter', version: '6.13.0'

    implementation group: 'com.github.slugify', name: 'slugify', version: '3.0.2'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.4'

    implementation group: 'org.jetbrains', name: 'annotations', version: '24.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
