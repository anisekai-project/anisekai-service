services:
  service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: .docker/anisekai.Dockerfile
    image: akionakao/anisekai:alpha
    user: '1000:1000'
    ports:
      - '10000:${SERVER_PORT:-8080}'
    networks:
      - anisekai
    links:
      - "mariadb:mariadb"
      - "transmission:transmission"
    depends_on:
      - mariadb
      - transmission
    volumes:
      - './data/torrents:/mnt/anisekai/torrents'
      - './data/web:/mnt/anisekai/web'
  mariadb:
    image: 'mariadb:lts-ubi'
    user: '1000:1000'
    ports:
      - '10001:${DB_PORT}'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'anisekai:/var/lib/mysql'
    networks:
      - anisekai
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
  flood:
    hostname: flood
    image: jesec/flood
    user: '1000:1000'
    restart: unless-stopped
    volumes:
      - 'anisekai:/home/node/.local/share/flood'
      - './data/torrents:/data'
    ports:
      - '10002:3000'
    networks:
      - anisekai
  transmission:
    build:
      context: .
      dockerfile: .docker/transmission.Dockerfile
    image: akionakao/transmission:4.0.5
    user: '1000:1000'
    ports:
      - '10003:9091'
      - '10004:51423'
    networks:
      - anisekai
    volumes:
      - './data/transmission:/app/data'
      - './data/torrents:/app/downloads'
networks:
  anisekai:
    driver: bridge
volumes:
  anisekai:
    driver: local
