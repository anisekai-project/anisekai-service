# Port onto which the database will be accessible from the host.
FW_DATABASE_PORT=3306

# Port onto which the web service will be accessible from the host.
FW_SERVICE_PORT=8080

# Port onto which the transmission web/rpc will be accessible from the host.
FW_TRANSMISSION_RPC_PORT=9091

# Port onto which the peer port will be accessible on the host.
FW_TRANSMISSION_PEER_PORT=51423

# Driver to use to connect to the database.
# For now only 'mariadb' is supported.
DB_CONNECTION=mariadb

# Host to which the service should connect for the database.
DB_HOST=mariadb

# Port that the database uses. If using the provided docker-compose file,
# you probably don't need to modify this.
DB_PORT=3306

# Name for the database.
DB_DATABASE=anisekai

# Username for the database.
DB_USERNAME=anisekai

# Password for the database.
DB_PASSWORD=anisekai

# Sentry DSN for error and trace reporting.
SENTRY_DSN=

# Sentry environment name.
SENTRY_ENV=

# Log level for every loggers under the 'fr.anisekai' package.
APPLICATION_LOG_LEVEL=debug

# Log level for 'fr.alexpado' (personal libs) and 'net.dv8tion' (JDA - Discord) packages
LIBRARY_LOG_LEVEL=info

# Log level for everything else.
FRAMEWORK_LOG_LEVEL=warn

# Discord Application Client ID.
DISCORD_CLIENT_ID=

# Discord Application Client Secret.
DISCORD_CLIENT_SECRET=

# Discord OAUTH Grant Type
DISCORD_GRANT_TYPE=authorization_code

# Discord OAUTH Scope
DISCORD_SCOPE=identify

# Discord OAUTH Redirect URI - Use port 8080 if you run the service outside docker.
DISCORD_REDIRECT_URI="http://localhost:8080/login/oauth2/code/discord"

# Discord Bot Token
DISCORD_TOKEN=

# Discord Bot Enabled/Disabled
DISCORD_ENABLED=true
